[{"content":"\n\n\n\n\n\n","permalink":"https://kyxie.github.io/zh/blog/music/","summary":"","title":"最近爱听"},{"content":"安装过程  首先需要安装Hugo，安装Hugo需要利用一个包管理工具，对于Windows系统Hugo推荐了两个包管理工具，Chocolatey和Scoop，我推荐用Scoop，不需要extended version。这里介绍了如何安装Scoop。 Hugo的tutorial介绍了如何创建一个项目，其中step2（.yml的config文件）和step3（下载主题）要根据PaperMod的guide来配置。  文件介绍  content：用于放博客内容 data：不用管 layouts：自定义的HTML public：项目导出文件 resources：自定义的CSS和JavaScript static：存放的图片 themes：主题  进入themes/PaperMod则是PaperMod的相关代码，比较主要的目录有：\n assets：PaperMod的CSS和JavaScript代码 layouts：PaperMod的HTML  Config.yml 建议直接按照【置顶】hugo博客搭建 | PaperMod主题 | Sulv\u0026rsquo;s Blog (sulvblog.cn)进行配置。\n创建文章 在终端输入hugo new 文章名称.md就会在content文件夹下创建markdown文件，文章头部信息可以修改这篇文章的属性，建议按照【置顶】hugo博客搭建 | PaperMod主题 | Sulv\u0026rsquo;s Blog (sulvblog.cn)进行配置。\n本地预览  在终端输入hugo server -D启动，建议新建一个.bat文件执行这条指令。 启动服务器后，打开浏览器，本地预览网址为localhost:1313。  网站部署 我用的是GitHub Page。\n 在GitHub里创建一个仓库，名称叫做你的名字.github.io。 当我们本地预览没问题了的时候，在终端输入hugo -F --cleanDestinationDir，在public文件夹下就会生成输出文件。 我们将public文件夹作为GitHub Page的本地仓库，每次生成输出文件就推送到GitHub上，GitHub Page就会自动帮我们部署了。  多语言  如果我们想要使用多语言（中英为例），就需要在content文件夹下准备两个文件夹，例如Chinese和English，一个放中文，另一个放英文。 在config.yml中需要做以下修改：  1 2 3 4 5 6 7 8 9 10  defaultContentLanguage: en defaultContentLanguageInSubdir: true  languages:  en:  languageName: \u0026#34;English\u0026#34;  contentDir: content/English  zh:  languageName: \u0026#34;中文\u0026#34;  contentDir: content/Chinese    暂时无法自动翻译，需要自己准备两份语言的内容。  搜索功能  分别在中英文的文件夹下创建search.md（hugo new search.md），修改文件头为：  1 2 3 4  title: \u0026#34;Search\u0026#34; date: ... draft: false layout: search    config.yml中添加：  1 2 3 4 5 6  menu: \tmain: \t-identifier: Search \tname: Search \turl: search \tweight: ...   Hover 主要在themes/PaperMod/assets/css/common/header.css中修改。\n 左上角Home的hover：  1 2 3 4  .logo a:hover {  transition: 0.15s;  color: grey; }    社交媒体hover：  1 2 3 4 5 6 7 8 9 10 11 12 13  svg:hover {  transition: 0.15s; }  .social-icons a:nth-child(1) svg:hover{  color: #C84370 !important; }  .social-icons a:nth-child(2) svg:hover {  color: grey !important; }  ...   nth-child可以设置各个图标的hover颜色。\n 黑夜模式和白天模式的hover：  1 2 3 4 5 6 7 8 9  #moon:hover {  transition: 0.15s;  color: deepskyblue; }  #sun:hover {  transition: 0.15s;  color: gold; }    menu中链接hover：  1 2 3 4  #menu a:hover {  transition: 0.15s;  color: grey; }    按钮hover：  在themes/PaperMod/assets/css/common/profile-mode.css中修改：\n1 2 3 4 5 6 7 8  .button:hover {  -webkit-transform: scale(1.1);  -moz-transform: scale(1.1);  -ms-transform: scale(1.1);  -o-transform: scale(1.1);  /* box-shadow: 0 0 0 1px grey; */  transform: scale(1.1) translateZ(0) translate3d(0, 0, 0) rotate(0.01deg); }   自定义社交媒体图标  利用SVG图标制作网站，比如icons8，找到我们需要的图标，例如微信。 可以利用左侧菜单栏的Stroke调节线条粗细。 点击download，SVG Embed，自定义图标大小为24*24，然后点击copy HTML。 在themes/PaperMod/layouts/partials/svg.html中粘贴复制的HTML。 需要修改为fill=currentColor stroke=currentColor，才能适应白天黑夜切换。 微信和微博的图标：  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  {{- else if (eq $icon_name \u0026#34;wechat\u0026#34;) -}} \u0026lt;svg xmlns=\u0026#34;http://www.w3.org/2000/svg\u0026#34; x=\u0026#34;0px\u0026#34; y=\u0026#34;0px\u0026#34; width=\u0026#34;24\u0026#34; height=\u0026#34;24\u0026#34; viewBox=\u0026#34;0 0 50 50\u0026#34;\u0026gt;  \u0026lt;g fill=\u0026#34;currentColor\u0026#34; stroke=\u0026#34;currentColor\u0026#34; stroke-width=\u0026#34;2\u0026#34;\u0026gt;  \u0026lt;path  d=\u0026#34;M 19 6 C 9.746094 6 2 12.359375 2 20.5 C 2 24.894531 4.292969 28.679688 7.835938 31.324219 L 5.179688 39.304688 L 13.472656 34.167969 C 15.1875 34.707031 17.082031 35 19 35 C 19.746094 35 20.472656 34.945313 21.195313 34.863281 C 23.378906 39.105469 28.328125 42 34 42 C 35.722656 42 37.316406 41.675781 38.796875 41.234375 L 45.644531 45.066406 L 43.734375 38.515625 C 46.3125 36.375 48 33.394531 48 30 C 48 23.789063 42.597656 18.835938 35.75 18.105469 C 34.398438 11.125 27.324219 6 19 6 Z M 19 8 C 26.308594 8 32.328125 12.351563 33.703125 18.011719 C 26.183594 18.148438 20 23.355469 20 30 C 20 31.019531 20.160156 32.003906 20.4375 32.941406 C 19.964844 32.980469 19.484375 33 19 33 C 17.101563 33 15.199219 32.710938 13.632813 32.15625 L 13.183594 32 L 8.820313 34.699219 L 10.1875 30.59375 L 9.5625 30.171875 C 6.082031 27.820313 4 24.445313 4 20.5 C 4 13.640625 10.65625 8 19 8 Z M 13 14 C 11.898438 14 11 14.898438 11 16 C 11 17.101563 11.898438 18 13 18 C 14.101563 18 15 17.101563 15 16 C 15 14.898438 14.101563 14 13 14 Z M 25 14 C 23.898438 14 23 14.898438 23 16 C 23 17.101563 23.898438 18 25 18 C 26.101563 18 27 17.101563 27 16 C 27 14.898438 26.101563 14 25 14 Z M 34 20 C 40.746094 20 46 24.535156 46 30 C 46 32.957031 44.492188 35.550781 42.003906 37.394531 L 41.445313 37.8125 L 42.355469 40.933594 L 39.105469 39.109375 L 38.683594 39.25 C 37.285156 39.71875 35.6875 40 34 40 C 27.253906 40 22 35.464844 22 30 C 22 24.535156 27.253906 20 34 20 Z M 29.5 26 C 28.699219 26 28 26.699219 28 27.5 C 28 28.300781 28.699219 29 29.5 29 C 30.300781 29 31 28.300781 31 27.5 C 31 26.699219 30.300781 26 29.5 26 Z M 38.5 26 C 37.699219 26 37 26.699219 37 27.5 C 37 28.300781 37.699219 29 38.5 29 C 39.300781 29 40 28.300781 40 27.5 C 40 26.699219 39.300781 26 38.5 26 Z\u0026#34;\u0026gt;  \u0026lt;/path\u0026gt;  \u0026lt;/g\u0026gt; \u0026lt;/svg\u0026gt; {{- else if (eq $icon_name \u0026#34;weibo\u0026#34;) -}} \u0026lt;svg xmlns=\u0026#34;http://www.w3.org/2000/svg\u0026#34; x=\u0026#34;0px\u0026#34; y=\u0026#34;0px\u0026#34; width=\u0026#34;24\u0026#34; height=\u0026#34;24\u0026#34; viewBox=\u0026#34;0 0 172 172\u0026#34;\u0026gt;  \u0026lt;g fill=\u0026#34;currentColor\u0026#34; stroke=\u0026#34;currentColor\u0026#34; stroke-width=\u0026#34;4\u0026#34;\u0026gt;  \u0026lt;path  d=\u0026#34;M120.4,20.64c-2.67406,0 -5.25406,0.26875 -7.74,0.71219c-1.86781,0.3225 -3.1175,2.10969 -2.795,3.9775c0.3225,1.88125 2.10969,3.13094 3.9775,2.80844c2.17688,-0.38969 4.35375,-0.61813 6.5575,-0.61813c20.93563,0 37.84,16.90438 37.84,37.84c0,4.52844 -0.83312,8.85531 -2.31125,12.91344c-0.45687,1.16906 -0.25531,2.48594 0.5375,3.45344c0.80625,0.9675 2.05594,1.42437 3.29219,1.19594c1.23625,-0.22844 2.24406,-1.11531 2.63375,-2.29781c1.73344,-4.75687 2.72781,-9.87656 2.72781,-15.265c0,-24.65781 -20.06219,-44.72 -44.72,-44.72zM120.4,41.28c-1.46469,0 -2.84875,0.14781 -4.16562,0.37625c-1.86781,0.33594 -3.13094,2.10969 -2.795,3.99094c0.3225,1.86781 2.10969,3.1175 3.9775,2.795c1.00781,-0.17469 2.00219,-0.28219 2.98312,-0.28219c9.54063,0 17.2,7.65938 17.2,17.2c0,2.05594 -0.37625,4.01781 -1.06156,5.87219c-0.645,1.78719 0.28219,3.7625 2.06938,4.4075c1.78719,0.645 3.7625,-0.26875 4.4075,-2.05594c0.92719,-2.55312 1.46469,-5.32125 1.46469,-8.22375c0,-13.26281 -10.81719,-24.08 -24.08,-24.08zM72.46844,42.6775c-11.04562,0 -27.50656,8.66719 -42.18031,23.07219c-14.76781,14.76781 -23.40813,30.24781 -23.40813,43.57781c0,25.9075 33.12344,41.3875 65.88406,41.3875c42.47594,0 70.90969,-24.46969 70.90969,-43.91375c0,-11.87875 -10.07812,-18.35562 -19.08125,-21.23125c-2.15,-0.72562 -3.60125,-1.08844 -2.52625,-3.96406c0.72563,-1.73344 1.77375,-5.01219 1.77375,-9.36594c0,-4.945 -3.44,-9.23156 -10.32,-9.9975c-0.79281,-0.08062 -2.13656,-0.14781 -3.82969,-0.14781c-5.6975,0 -15.48,0.71219 -22.52125,3.66844c0,0 -1.38406,0.57781 -2.49938,0.57781c-1.00781,0 -1.80062,-0.48375 -1.11531,-2.37844c2.52625,-7.91469 2.16344,-14.39156 -1.80063,-18.00625c-2.23062,-2.23062 -5.42875,-3.27875 -9.28531,-3.27875zM72.46844,49.5575c1.43781,0 3.37281,0.215 4.43438,1.26313l0.1075,0.12094l0.12094,0.1075c1.54531,1.41094 1.51844,5.61687 -0.09406,10.72312c-1.38406,3.99094 -0.09406,6.75906 0.81969,8.04906c1.51844,2.16344 4.00437,3.39969 6.81281,3.39969c2.28438,0 4.39406,-0.79281 5.14656,-1.11531c5.50938,-2.31125 13.88094,-3.13094 19.87406,-3.13094c1.53187,0 2.60687,0.05375 3.07719,0.1075c2.78156,0.30906 4.1925,1.37063 4.1925,3.15781c0,3.23844 -0.77937,5.61688 -1.23625,6.73219l-0.05375,0.1075l-0.04031,0.09406c-1.075,2.88906 -1.06156,5.50938 0.04031,7.80719c1.62594,3.39969 4.82406,4.46125 6.54406,5.03906l0.28219,0.09406c5.34813,1.70656 14.2975,5.88562 14.2975,14.68719c0,7.90125 -6.81281,17.65688 -18.90656,25.16844c4.77031,-5.54969 7.47125,-12.05344 7.47125,-19.05437c0,-21.01625 -24.37562,-37.47719 -55.48344,-37.47719c-31.10781,0 -55.47,16.46094 -55.47,37.47719c0,0.645 0.01344,1.27656 0.05375,1.90812c-0.45687,-1.76031 -0.69875,-3.60125 -0.69875,-5.49594c0,-11.16656 7.59219,-24.91312 21.33875,-38.65969c14.86188,-14.59313 29.48188,-21.11031 37.36969,-21.11031zM69.875,82.33156c26.84813,0 48.60344,13.69281 48.60344,30.59719c0,16.89094 -21.75531,30.58375 -48.60344,30.58375c-26.83469,0 -48.59,-13.69281 -48.59,-30.58375c0,-16.90437 21.75531,-30.59719 48.59,-30.59719zM66.27375,89.52063c-10.38719,0.08062 -20.47875,5.76469 -24.85937,14.52594c-5.40188,11.13969 -0.36281,23.38125 12.59094,27.33187c12.95375,4.31344 28.42031,-2.16344 33.82219,-14.02875c5.38844,-11.5025 -1.43781,-23.73062 -14.39156,-26.95562c-2.365,-0.61813 -4.77031,-0.88688 -7.16219,-0.87344zM71.63531,104.06c1.98875,0 3.60125,1.59906 3.60125,3.58781c0,1.98875 -1.6125,3.60125 -3.60125,3.60125c-1.98875,0 -3.60125,-1.6125 -3.60125,-3.60125c0,-1.98875 1.6125,-3.58781 3.60125,-3.58781zM56.47781,107.64781c1.12875,0.01344 2.2575,0.18812 3.31906,0.55094c4.60906,1.46469 6.02,5.83188 3.18469,9.47344c-2.4725,3.64156 -8.12969,5.45563 -12.38938,3.64156c-4.23281,-1.81406 -5.29437,-6.19469 -2.82187,-9.46c1.85437,-2.74125 5.30781,-4.24625 8.7075,-4.20594z\u0026#34;\u0026gt;  \u0026lt;/path\u0026gt;  \u0026lt;/g\u0026gt;  \u0026lt;path d=\u0026#34;\u0026#34; fill=\u0026#34;none\u0026#34;\u0026gt;\u0026lt;/path\u0026gt; \u0026lt;/svg\u0026gt;   目录栏目放侧边 详见：Hugo博客目录放在侧边 | PaperMod主题 | Sulv\u0026rsquo;s Blog (sulvblog.cn)。\n代码字体 详见：折腾 Hugo \u0026amp; PaperMod 主题 - Dvel\u0026rsquo;s Blog\n代码高亮和背景： 详见：折腾 Hugo \u0026amp; PaperMod 主题 - Dvel\u0026rsquo;s Blog\nMarkdown渲染风格 详见：折腾 Hugo \u0026amp; PaperMod 主题 - Dvel\u0026rsquo;s Blog\n流量统计 这里我使用了不蒜子，在themes/PaperMod/layouts/partials/svg.html中修改：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  {{- if not (.Param \u0026#34;hideFooter\u0026#34;) }} \u0026lt;footer class=\u0026#34;footer\u0026#34;\u0026gt;  {{- if site.Copyright }}  \u0026lt;span\u0026gt;{{ site.Copyright | markdownify }}\u0026lt;/span\u0026gt;  {{- else }}  \u0026lt;span\u0026gt;\u0026amp;copy; {{ now.Year }} \u0026lt;a href=\u0026#34;{{ \u0026#34;\u0026#34; | absLangURL }}\u0026#34;\u0026gt;{{ site.Title }}\u0026lt;/a\u0026gt;\u0026lt;/span\u0026gt;  {{- end }}  \u0026lt;script async src=\u0026#34;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt;  \u0026lt;span id=\u0026#34;busuanzi_container\u0026#34;\u0026gt;  \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\u0026#34;\u0026gt;  Visitors: \u0026lt;span id=\u0026#34;busuanzi_value_site_uv\u0026#34;\u0026gt;\u0026lt;/span\u0026gt;  Views: \u0026lt;span id=\u0026#34;busuanzi_value_site_pv\u0026#34;\u0026gt;\u0026lt;/span\u0026gt;  \u0026lt;/span\u0026gt; \u0026lt;/footer\u0026gt; {{- end }}   插入B站，YouTube视频或PPT 详见：Hugo博客自定义shortcodes | Sulv\u0026rsquo;s Blog (sulvblog.cn)\n插入音乐播放器 详见：Hugo插入音乐播放器\n隐藏歌词：lrc-type=\u0026quot;1\u0026quot;\n","permalink":"https://kyxie.github.io/zh/blog/papermod/","summary":"安装过程 首先需要安装Hugo，安装Hugo需要利用一个包管理工具，对于Windows系统Hugo推荐了两个包管理工具，Chocolatey和","title":"Hugo + PaperMod搭建博客"},{"content":" 研究生项目 Turbo Wallet - 记账软件 2022年1月 至 2022年3月，JavaScript\n GitHub (前端仓库): https://github.com/Kyxie/money-management.git\nGitHub (后端仓库): https://github.com/Kyxie/money-back.git\n  这是一个帮助我们记录每天生活花费的手机App。 前端基于React.js框架，后端基于Express.js框架，数据库基于MongoDB。 可以添加，编辑和删除每一条消费记录，并且App会生成一些折线图和饼图帮助我们分析近期的消费。 还可以直观地看到哪一种消费花了多少钱，以及不同种类的消费的排序。   交通监视系统 2021年9月 至 2021年12月，Python / C++\n GitHub: https://github.com/Kyxie/Traffic.git\n  这个项目帮助当地警察局在道路交叉口安装最少的摄像头，但是获得最大的监控覆盖面积。这是一个顶点覆盖问题，我们利用CNF-SAT来对这个问题进行优化。 使用Python生成一张包含城市交通细节的地图(道路和十字路口)，然后尝试使用迪杰斯特拉算法在城市中找到最短路径，最后，我们利用CNF-SAT模拟安装摄像头是否能覆盖城市所有街道，解决顶点覆盖问题。 该项目实现了多线程和并行处理，以更高效地运行。   我的个人网站 2021年8月 至 今，HTML / CSS / JavaScript\n GitHub: https://github.com/Kyxie/Kyxie.github.io.git\n  这个项目是基于Hugo的PaperMod主题。   本科项目 基于深度学习的行人重识别系统 2020年9月 至 2021年6月，Python\n GitHub: https://github.com/Kyxie/ReID-deep-learning.git\n  本项目是基于深度学习方法的行人重识别系统，所使用的框架是PyTorch。 我们利用Market-1501数据集去训练模型，然后利用这个数据集和我们自创的UESTC Re-ID数据集去测试模型。 本项目的深度学习模型为ResNet-50，损失函数为TriHard损失。 对于Market-1501数据集的mAP指标达到58.8%，rank@1指标达到76.3%。   信道分配系统 2021年4月 至 2021年5月，MATLAB\n GitHub: https://github.com/Kyxie/Channels.git\n  这是一个关于信道分配问题的项目，项目背景为在医院中，将最高信噪比的信道分配给最需要的人（例如病人），而将普通人分配给病人的干扰信道（信噪比低）。 我们提出了4种算法去实现这个问题。   Webots机器人 2020年2月 至 2020年6月，C++\n GitHub: https://github.com/Kyxie/TDPS-2020-UESTC-Glasgow.git\nBilibili: https://www.bilibili.com/video/BV1Rp4y1S7o3?from=search\u0026amp;seid=72774621551842110\n \r.bilibili_shortcodes {\rposition: relative;\rwidth: 100%;\rheight: 0;\rpadding-bottom: 66%;\rmargin: auto;\roverflow: hidden;\rtext-align: center;\r}\r.bilibili_shortcodes iframe {\rposition: absolute;\rwidth: 100%;\rheight: 100%;\rleft: 0;\rtop: 0;\r}\r\r\r\r\r\r\r\r  这是一个基于Webots的项目。 我们在Webots软件中设计了一个智能小车和完成任务需要的场地，我们为小车安装了惯性导航模块，LIDAR模块和摄像头模块使得小车可以完成巡线，姿态解算，颜色识别等任务。   基于FPGA的波形发生器 2019年9月 至 2019年12月, Verilog\n GitHub: https://github.com/Kyxie/wave-generator.git\n  利用FPGA (Xilinx xc7a35tftg256)来生成正弦波，三角波和方波。 波的频率可调，从0 - 255Hz，并由8位USART控制。 利用4个拨码开关来控制振幅，从0 - 1V，分辨率为0.1V。 利用2个拨码开关来选择波形。 输出结果可通过VGA显示，可显示相应波形的图像信息和频率、幅值。   一个RISC架构的CPU 2018年2月 至 2018年6月, Verilog\n GitHub: https://github.com/Kyxie/CPU.git\n  使用Quartus II软件实现RISC CPU，使其能够进行加、减、乘、除操作。 CPU的设计包含数据路径模块设计（ALU，寄存器和PC），控制单元设计（状态转换和IR）以及这两个模块之间的通信（CPU的集成）。  ","permalink":"https://kyxie.github.io/zh/project/projects/","summary":"研究生项目 Turbo Wallet - 记账软件 2022年1月 至 2022年3月，JavaScript GitHub (前端仓库): https://github.com/Kyxie/money-management.git GitHub (后端仓库): https://github.com/Kyxie/money-back.git 这是一个帮助我们记录每天生活","title":"项目 👨‍💻"},{"content":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  class Me:  def __init__(self):  self.name = \u0026#34;Kunyang Xie\u0026#34;  self.prefer_name = \u0026#34;Kyrie\u0026#34;  self.born_year = 1999  self.height = 181  self.hometown = \u0026#34;Weifang, Shandong, CN\u0026#34;  self.grad_school = \u0026#34;uWaterloo\u0026#34;  self.undergrad_school = \u0026#34;UESTC, UofG\u0026#34;  self.curr_location = \u0026#34;Waterloo, ON, CA\u0026#34;   def favs(self):  self.fav_sport = \u0026#34;cycling, basketball\u0026#34;  self.fav_series = \u0026#34;Better Call Saul\u0026#34;  self.fav_color = \u0026#34;Macaroon Colors\u0026#34;  self.fav_band = \u0026#34;the Chainsmokers\u0026#34;  self.fav_city = \u0026#34;Chengdu\u0026#34;  self.fav_cat = \u0026#34;ragdoll\u0026#34;  self.fav_dog = \u0026#34;golden retriever\u0026#34;   def contact_info(self):  self.github = \u0026#34;Kyxie\u0026#34;  self.instagram = \u0026#34;_kyxie\u0026#34;  self.linkedin = \u0026#34;Kunyang (Kyrie) Xie\u0026#34;  self.wechat = \u0026#34;_Kyxie\u0026#34;  self.weibo = \u0026#34;_Kyxie\u0026#34;  self.strava = \u0026#34;Kyrie Xie\u0026#34;  self.zwift = \u0026#34;KYRIE XIE (UWCC)\u0026#34;   ","permalink":"https://kyxie.github.io/zh/about/about/","summary":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 class Me: def __init__(self): self.name = \u0026#34;Kunyang Xie\u0026#34; self.prefer_name = \u0026#34;Kyrie\u0026#34; self.born_year = 1999 self.height = 181 self.hometown = \u0026#34;Weifang, Shandong, CN\u0026#34; self.grad_school = \u0026#34;uWaterloo\u0026#34; self.undergrad_school = \u0026#34;UESTC, UofG\u0026#34; self.curr_location = \u0026#34;Waterloo, ON, CA\u0026#34; def favs(self): self.fav_sport = \u0026#34;cycling, basketball\u0026#34; self.fav_series =","title":"关于我 👋"}]